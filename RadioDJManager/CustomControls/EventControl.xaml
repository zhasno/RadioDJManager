<UserControl x:Class="RadioDJManager.CustomControls.EventControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RadioDJManager.CustomControls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>


            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

                <materialDesign:Card
                    Margin="10"
                    Background="{DynamicResource MaterialDesignPaper}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Grid.Row="0">
                    <TextBlock Text="{Binding MainEvent.EventDisplay, UpdateSourceTrigger=PropertyChanged}" 
                               ToolTip="{Binding MainEvent.EventDisplay, UpdateSourceTrigger=PropertyChanged}" 
                               FontSize="20px"
                               Margin="10"/>
                </materialDesign:Card>

                <materialDesign:Card
                    Margin="10,30,10,10"
                    Background="{DynamicResource MaterialDesignPaper}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Grid.Row="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                            <Label Content="Select Event :" 
                                   VerticalAlignment="Top" 
                                   HorizontalAlignment="Center" 
                                   Margin="10"
                                   FontSize="15px"
                                   Grid.Column="0"/>
                            <ComboBox 
                                x:Name="cbEvents"
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Top" 
                                Margin="10" 
                                Width="300" 
                                Grid.Column="1"
                                ItemsSource="{Binding EventList, UpdateSourceTrigger=PropertyChanged}"
                                DisplayMemberPath="name"
                                SelectedIndex="{Binding MainEvent.EventIndex, UpdateSourceTrigger=PropertyChanged}"
                                SelectedItem="{Binding MainEvent.Model, UpdateSourceTrigger=PropertyChanged}"
                            />
                </Grid>
                </materialDesign:Card>


                <materialDesign:Card
                    Margin="10"
                    Background="{DynamicResource MaterialDesignPaper}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Grid.Row="2">
                <Grid Margin="10,50,10,50">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>

                    <Label FontSize="15"
                           Content="Actions"
                           ToolTip="Actions"
                           Grid.Row="0"
                           Grid.Column="0"
                           Margin="10"
                           FontWeight="Bold"/>

                    <Label FontSize="15"
                           Content="Rotate By"
                           ToolTip="Rotate By"
                           Grid.Row="0"
                           Grid.Column="1"
                           Margin="10"
                           FontWeight="Bold"/>

                    <Label FontSize="15"
                           Content="Duration"
                           ToolTip="Duration"
                           Grid.Row="0"
                           Grid.Column="2"
                           Margin="10"
                           FontWeight="Bold"/>

                    <ComboBox ItemsSource="{Binding MainEvent.Model.actions, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding MainEvent.SelectedAction, UpdateSourceTrigger=PropertyChanged}"
                              SelectedIndex="{Binding MainEvent.ActionIndex, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="ActionValue"
                              Margin="10"
                              Grid.Row="1"
                              Grid.Column="0"/>

                    <ComboBox SelectedItem="{Binding MainEvent.SelectedAction.SelectedOption, UpdateSourceTrigger=PropertyChanged}" 
                              ItemsSource="{Binding MainEvent.SelectedAction.ActionOptions, UpdateSourceTrigger=PropertyChanged}"
                              Margin="10"
                              Grid.Row="1"
                              Grid.Column="1"/>

                    <TextBox Text="{Binding MainEvent.SelectedAction.Lenght, UpdateSourceTrigger=PropertyChanged}"
                             IsReadOnly="True"
                             Margin="10"
                             Grid.Row="1"
                             Grid.Column="2"/>
                </Grid>
            </materialDesign:Card>

                <Button Command="{Binding ApplyChangesC}"  
                        Content="Apply"
                        ToolTip="Apply Changes" 
                        VerticalAlignment="Bottom" 
                        HorizontalAlignment="Center" 
                        Width="150" 
                        Grid.Row="3"
                        Margin="10"/>
        </Grid>

        <!--Vertical Splitter-->
        <GridSplitter Grid.Column="1" 
                      Width="2" 
                      VerticalAlignment="Stretch"
                      IsEnabled="False"/>

        <!--Event After & Before-->
        <StackPanel Orientation="Vertical" 
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Grid.Column="2"
                    Margin="10">

            <GroupBox Header="Run Before Athan" 
                      HorizontalAlignment="Left"
                      Margin="10">

                <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Center">
                    <Label FontSize="15"
                            Width="170"
                            Content="{Binding EventBeforeAthan.EventDisplay, UpdateSourceTrigger=PropertyChanged}"
                            ToolTip="{Binding EventBeforeAthan.EventDisplay, UpdateSourceTrigger=PropertyChanged}"/>

                    <ComboBox Width="200"
                                ItemsSource="{Binding EventList,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                                DisplayMemberPath="name"
                                SelectedIndex="{Binding EventBeforeAthan.EventIndex,UpdateSourceTrigger=PropertyChanged}"
                                SelectedItem="{Binding EventBeforeAthan.Model,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"                        
                            />
                    <Border Width="5"/>
                    <ComboBox Width="200"
                                ItemsSource="{Binding EventBeforeAthan.Model.actions,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                                DisplayMemberPath="ActionValue"
                                SelectedIndex="{Binding EventBeforeAthan.ActionIndex,UpdateSourceTrigger=PropertyChanged}"
                                SelectedItem="{Binding EventBeforeAthan.SelectedAction,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"                        
                            />
                </StackPanel>

            </GroupBox>
            <GroupBox Header="Run After Athan" 
                        HorizontalAlignment="Left" 
                        Margin="10,70,10,10">
                <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Center">
                    <Label Width="170"
                           FontSize="15"
                            Content="{Binding EventAfterAthan.EventDisplay, UpdateSourceTrigger=PropertyChanged}"
                            ToolTip="{Binding EventBeforeAthan.EventDisplay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox Width="200"
                                ItemsSource="{Binding EventList,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                                DisplayMemberPath="name"
                                SelectedIndex="{Binding EventAfterAthan.EventIndex,UpdateSourceTrigger=PropertyChanged}"
                                SelectedItem="{Binding EventAfterAthan.Model,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                            />
                    <Border Width="5"/>
                    <ComboBox Width="200"
                                ItemsSource="{Binding EventAfterAthan.Model.actions,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                                DisplayMemberPath="ActionValue"
                                SelectedIndex="{Binding EventAfterAthan.ActionIndex, UpdateSourceTrigger=PropertyChanged}"
                                SelectedItem="{Binding EventAfterAthan.SelectedAction,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                            />
                </StackPanel>

            </GroupBox>
        </StackPanel>
    </Grid>
</UserControl>
